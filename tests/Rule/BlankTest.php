<?php
/**
 * Caridea
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *
 * @copyright 2015 LibreWorks contributors
 * @license   http://opensource.org/licenses/Apache-2.0 Apache 2.0 License
 */
namespace Caridea\Validate\Rule;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-07-21 at 12:53:04.
 */
class BlankTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @covers Caridea\Validate\Rule\Blank::required
     * @covers Caridea\Validate\Rule\Blank::__construct
     * @covers Caridea\Validate\Rule\Blank::apply
     */
    public function testRequired()
    {
        $object = Blank::required();
        $this->assertNull($object->apply('hi'));
        $this->assertNull($object->apply(false));
        $this->assertNull($object->apply('    '));
        $this->assertEquals('REQUIRED', $object->apply(''));
        $this->assertEquals('REQUIRED', $object->apply(null));
    }

    /**
     * @covers Caridea\Validate\Rule\Blank::notEmpty
     * @covers Caridea\Validate\Rule\Blank::__construct
     * @covers Caridea\Validate\Rule\Blank::apply
     */
    public function testNotEmpty()
    {
        $object = Blank::notEmpty();
        $this->assertNull($object->apply('hi'));
        $this->assertNull($object->apply(false));
        $this->assertNull($object->apply('    '));
        $this->assertNull($object->apply(null));
        $this->assertNull($object->apply([]));
        $this->assertEquals('CANNOT_BE_EMPTY', $object->apply(''));
    }

    /**
     * @covers Caridea\Validate\Rule\Blank::notEmptyList
     * @covers Caridea\Validate\Rule\Blank::__construct
     * @covers Caridea\Validate\Rule\Blank::apply
     */
    public function testNotEmptyList()
    {
        $object = Blank::notEmptyList();
        $this->assertNull($object->apply([1]));
        $this->assertNull($object->apply(new \ArrayObject([1])));
        $this->assertEquals('FORMAT_ERROR', $object->apply('hi'));
        $this->assertEquals('FORMAT_ERROR', $object->apply($object));
        $this->assertEquals('CANNOT_BE_EMPTY', $object->apply(null));
        $this->assertEquals('CANNOT_BE_EMPTY', $object->apply(0));
        $this->assertEquals('CANNOT_BE_EMPTY', $object->apply(false));
        $this->assertEquals('CANNOT_BE_EMPTY', $object->apply([]));
        $this->assertEquals('CANNOT_BE_EMPTY', $object->apply(''));
    }
}
