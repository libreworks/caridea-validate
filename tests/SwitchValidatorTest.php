<?php
/**
 * Caridea
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *
 * @copyright 2015-2016 LibreWorks contributors
 * @license   http://opensource.org/licenses/Apache-2.0 Apache 2.0 License
 */
namespace Caridea\Validate;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-07-21 at 14:58:00.
 */
class SwitchValidatorTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @covers Caridea\Validate\SwitchValidator
     */
    public function testIterate()
    {
        $val = $this->getMockBuilder(Validator::class)->setMethods(['validate'])->disableOriginalConstructor()->getMock();
        $val->expects($this->once())
            ->method('validate')
            ->willReturn(new Result(['user' => 'ERROR']));
        $object = new SwitchValidator('foo', ['bar' => $val]);
        $result = $object->validate(['foo' => 'bar', 'user' => 'aoeuhtns']);
        $this->assertEquals(['user' => 'ERROR'], $result->getErrors());
        $this->verifyMockObjects();
    }

    /**
     * @covers Caridea\Validate\SwitchValidator
     * @expectedException \InvalidArgumentException
     */
    public function testIterateNone()
    {
        $object = new SwitchValidator('foo', []);
        $object->validate(['foo' => 'bar']);
    }

    /**
     * @covers Caridea\Validate\SwitchValidator
     * @expectedException \InvalidArgumentException
     */
    public function testIterateBad()
    {
        $object = new SwitchValidator('foo', []);
        $object->validate(123);
    }
}
